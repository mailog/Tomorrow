package database;
import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.sql.DataSource;
import org.springframework.jdbc.core.JdbcTemplate;
import Security.EncryptMethod;

public class BountyJDBC implements UserDAO{
	
	private static DataSource datasource;
	private static JdbcTemplate jdbcTemplateObject;
	private static EncryptMethod encrypter;
	
	public void setDataSource(DataSource ds){
		encrypter = new EncryptMethod();
		this.datasource = ds;
		jdbcTemplateObject = new JdbcTemplate(datasource);
	}
	
	public void createBounty(int id, String title, String criteria, String description, double value, String expiration)
	{
		String SQL = "insert into bounty (id, title, criteria, description, value, expiration) values (?, ?, ?, ?, ?, ?,)";
		jdbcTemplateObject.update(SQL, id, title, criteria, description, value, expiration);
		System.out.println("Created Record Name: " + title + "with ID: " + id);
	}
	
	public User getBounty(int id){
		String SQL = "select * from bounty where email=?";
		Bounty bounty = jdbcTemplateObject.queryForObject(SQL, new Object[]{id}, new BountyMapper());
		return bounty;
	}
	
	public List<Bounty> listBounties(){
		String SQL = "select * from bounty";
		List<Bounty> bounties = jdbcTemplateObject.query(SQL, new BountyMapper());
		return users;
	}
	
	public void deleteUser(String email){
		String SQL = "delete from legitTable where email = ?";
		jdbcTemplateObject.update(SQL, email);
		System.out.println("Deleted " + email + " from Users");
	}
	
	public void updateUser(String email, String password){
		String SQL = "update legitTable set password = ? where email = ?";
		
		jdbcTemplateObject.update(SQL, password, email);
		System.out.println("Updated " + email);
	}
}
